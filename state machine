{
  "Comment": "Express Workflow to manage ECS service restarts ensuring no deployments are in progress",
  "StartAt": "Check Ongoing Deployments",
  "States": {
    "Check Ongoing Deployments": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:ecs:listServices",
      "Parameters": {
        "Cluster.$": "$.ClusterName"
      },
      "ResultPath": "$.ServiceList",
      "Next": "Describe Services"
    },
    "Describe Services": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:ecs:describeServices",
      "Parameters": {
        "Cluster.$": "$.ClusterName",
        "Services.$": "$.ServiceList.serviceArns"
      },
      "ResultPath": "$.ServiceDetails",
      "Next": "Evaluate Deployment Status"
    },
    "Evaluate Deployment Status": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ServiceDetails.services[0].deployments[0].status",
          "StringEquals": "IN_PROGRESS",
          "Next": "Wait and Retry"
        }
      ],
      "Default": "Process Update"
    },
    "Wait and Retry": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "Check Ongoing Deployments"
    },
    "Process Update": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:ecs:updateService",
      "Parameters": {
        "Cluster.$": "$.ClusterName",
        "Service.$": "$.ServiceName",
        "ForceNewDeployment": true
      },
      "HeartbeatSeconds": 300,  // Timeout to help manage long-running tasks
      "Next": "Wait Before Monitoring"
    },
    "Wait Before Monitoring": {
      "Type": "Wait",
      "Seconds": 300,  // 5 minutes wait
      "Next": "Monitor Service"
    },
    "Monitor Service": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:ecs:describeServices",
      "Parameters": {
        "Cluster.$": "$.ClusterName",
        "Services": [
          "$.ServiceName"
        ]
      },
      "End": true
    }
  }
}
