{
  "Comment": "State machine to handle ECS service deployment, ensuring only one deployment at a time",
  "StartAt": "Check Deployment Status",
  "States": {
    "Check Deployment Status": {
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:describeServices",
      "Parameters": {
        "Cluster": "YOUR_CLUSTER_NAME",  // Replace with your ECS cluster name
        "Services": [
          "SERVICE_A",  // Replace with actual service names
          "SERVICE_B"
        ]
      },
      "ResultPath": "$.ServiceStatus",
      "Next": "Is Deployment In Progress"
    },
    "Is Deployment In Progress": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ServiceStatus.services[0].deployments[0].status",
          "StringEquals": "PRIMARY",
          "Next": "Wait for Deployment"
        }
      ],
      "Default": "Start Deployment"
    },
    "Wait for Deployment": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "Check Deployment Status"
    },
    "Start Deployment": {
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:updateService",
      "Parameters": {
        "Cluster": "YOUR_CLUSTER_NAME",  // Replace with your ECS cluster name
        "Service": "$.ServiceName",
        "ForceNewDeployment": true
      },
      "Next": "Wait for Completion"
    },
    "Wait for Completion": {
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:describeServices",
      "Parameters": {
        "Cluster": "YOUR_CLUSTER_NAME",  // Replace with your ECS cluster name
        "Services": ["$.ServiceName"]
      },
      "ResultPath": "$.DeploymentStatus",
      "Next": "Deployment Complete"
    },
    "Deployment Complete": {
      "Type": "Succeed"
    }
  }
}
