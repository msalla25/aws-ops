{
  "Comment": "State machine to manage ECS service restarts with flag logic to prevent concurrent runs",
  "StartAt": "Check Flag",
  "States": {
    "Check Flag": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:CheckFlagFunction",
      "ResultPath": "$.FlagCheckResult",
      "Next": "Evaluate Flag"
    },
    "Evaluate Flag": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.FlagCheckResult.isLocked",
          "BooleanEquals": false,
          "Next": "Set Flag"
        }
      ],
      "Default": "Fail"
    },
    "Set Flag": {
      "Type": "Task",
      "Resource": "arn:aws:lambda:REGION:ACCOUNT_ID:function:SetFlagFunction",
      "Parameters": {
        "FlagName": "ServiceRestartLock",
        "Status": "locked"
      },
      "Next": "Restart Service"
    },
    "Restart Service": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:ecs:updateService",
      "Parameters": {
        "Cluster.$": "$.ClusterName",
        "Service.$": "$.ServiceToRestart",
        "ForceNewDeployment": true
      },
      "Next": "Wait Before Monitoring"
    },
    "Wait Before Monitoring": {
      "Type": "Wait",
      "Seconds": 300,
      "Next": "Monitor Service"
    },
    "Monitor Service": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:ecs:describeServices",
      "Parameters": {
        "Cluster.$": "$.ClusterName",
        "Services": [
          "$.ServiceToRestart"
        ]
      },
      "End": true
    },
    "Fail": {
      "Type": "Fail",
      "Error": "ConcurrentExecutionError",
      "Cause": "Another execution is currently in progress."
    }
  }
}
